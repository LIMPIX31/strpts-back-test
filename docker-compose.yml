version: '3.8'

services:
  yarn:
    image: node:21
    working_dir: /workspace
    volumes:
      - ./:/workspace
    entrypoint: yarn

  postgres:
    image: bitnami/postgresql:15.5.0
    environment:
      - POSTGRESQL_DATABASE=db
      - POSTGRESQL_USERNAME=root
      - POSTGRESQL_PASSWORD=root
    ports:
      - "5432:5432"

  service-first:
    image: node:21
    working_dir: /workspace
    volumes:
      - ./:/workspace
    entrypoint: yarn workspace @service/entrypoint dev
    environment:
      - DB_HOST=postgres
      - SERVICE_ID=first
    ports:
      - "9000:9000"
    depends_on:
      yarn:
        condition: service_completed_successfully
      postgres:
        condition: service_started

  service-second:
    image: node:21
    working_dir: /workspace
    volumes:
      - ./:/workspace
    entrypoint: yarn workspace @service/entrypoint dev
    environment:
      - DB_HOST=postgres
      - SERVICE_ID=second
    depends_on:
      yarn:
        condition: service_completed_successfully
      postgres:
        condition: service_started

  service-third:
    image: node:21
    working_dir: /workspace
    volumes:
      - ./:/workspace
    entrypoint: yarn workspace @service/entrypoint dev
    environment:
      - DB_HOST=postgres
      - SERVICE_ID=third
    depends_on:
      yarn:
        condition: service_completed_successfully
      postgres:
        condition: service_started

  service-fourth:
    image: node:21
    working_dir: /workspace
    volumes:
      - ./:/workspace
    entrypoint: yarn workspace @service/entrypoint dev
    environment:
      - DB_HOST=postgres
      - SERVICE_ID=fourth
    depends_on:
      yarn:
        condition: service_completed_successfully
      postgres:
        condition: service_started

  service-fifth:
    image: node:21
    working_dir: /workspace
    volumes:
      - ./:/workspace
    entrypoint: yarn workspace @service/entrypoint dev
    environment:
      - DB_HOST=postgres
      - SERVICE_ID=fifth
    depends_on:
      yarn:
        condition: service_completed_successfully
      postgres:
        condition: service_started
